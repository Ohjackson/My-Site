{
  "name": {
    "ko": "Loventure",
    "en": "Loventure",
    "ja": "ラベンチャー"
  },
  "summary": {
    "ko": "커플을 위한 맞춤형 여행 계획 및 추천 서비스",
    "en": "Personalized travel planning and recommendation service for couples",
    "ja": "カップル向けのカスタマイズされた旅行計画と推奨サービス"
  },
  "role": {
    "ko": "PM, Full-Stack",
    "en": "Full-stack Developer",
    "ja": "フルスタック開発者"
  },
  "tags": {
    "ko": ["자체 개발 추천 알고리즘", "Laggraph", "k8s", "MSA"],
    "en": ["React", "Node.js", "MongoDB", "AI"],
    "ja": ["React", "Node.js", "MongoDB", "AI"]
  },
  "platform": {
    "ko": "Web",
    "en": "Web, Mobile",
    "ja": "Web, Mobile"
  },
  "workPeriod": {
    "ko": "2025.09 - 2025.10",
    "en": "2023.09 - 2024.02",
    "ja": "2023.09 - 2024.02"
  },
  "releaseDate": {
    "ko": "진행중",
    "en": "2024.02.14",
    "ja": "2024.02.14"
  },
  "endDate": {
    "ko": "2025.10",
    "en": "2024.08.31",
    "ja": "2024.08.31"
  },
  "teamSize": {
    "ko": "8",
    "en": "2 people",
    "ja": "2人"
  },
  "additionalFeatures": {
    "ko": "",
    "en": "Provides personalized travel experiences through AI-based destination recommendations and couple preference analysis. Enables couples to plan special trips together through real-time travel schedule management and social features.",
    "ja": "AIベースの旅行先推奨とカップル嗜好分析により、カスタマイズされた旅行体験を提供します。リアルタイム旅行スケジュール管理とソーシャル機能により、カップルが一緒に特別な旅行を計画できます。"
  },
  "features": {
    "ko": [
      "AI 기반 여행지 추천",
      "커플 취향 분석 및 매칭",
      "실시간 여행 일정 관리",
      "소셜 기능 및 추억 공유"
    ],
    "en": [
      "AI-based destination recommendations",
      "Couple preference analysis and matching",
      "Real-time travel itinerary management",
      "Social features and memory sharing"
    ],
    "ja": [
      "AIベースの旅行先推奨",
      "カップルの好み分析とマッチング",
      "リアルタイム旅行スケジュール管理",
      "ソーシャル機能と思い出共有"
    ]
  },
  "overviewStory": {
    "ko": "커플의 취향과 상황을 분석하여 최적의 여행 계획을 제공하는 AI 서비스",
    "en": "AI service that analyzes couples' preferences and situations to provide optimal travel plans",
    "ja": "カップルの好みと状況を分析して最適な旅行計画を提供するAIサービス"
  },
  "links": {
    "demo": "https://loventure.app",
    "github": "https://github.com/YourUsername/Loventure-Couple-Travel-AI"
  },
  "service": {
    "problem": {
      "ko": "커플 간의 여행 취향 차이로 인한 계획 수립의 어려움과 시간 소모.",
      "en": "Difficulty and time consumption in planning due to differences in travel preferences between couples.",
      "ja": "カップル間の旅行の好みの違いによる計画立案の困難さと時間消費。"
    },
    "target": {
      "ko": "여행 계획에 어려움을 겪거나, 특별하고 개인화된 경험을 원하는 20-40대 커플.",
      "en": "Couples in their 20s-40s who struggle with travel planning or desire a special and personalized experience.",
      "ja": "旅行計画に苦労している、または特別でパーソナライズされた体験を望む20-40代のカップル。"
    },
    "value": {
      "ko": "AI가 두 사람의 취향을 모두 만족시키는 최적의 경로와 활동을 제안하여 갈등을 줄이고 만족도를 극대화.",
      "en": "AI suggests optimal routes and activities that satisfy both partners' preferences, reducing conflict and maximizing satisfaction.",
      "ja": "AIが二人の好みを両方満たす最適なルートとアクティビティを提案し、対立を減らし満足度を最大化。"
    }
  },
  "detail_features": [
    {
      "title": {
        "ko": "AI 기반 여행지 추천",
        "en": "AI-based Destination Recommendations",
        "ja": "AIベースの旅行先推奨"
      }
      "description": {
        "ko": "머신러닝 모델이 개별 사용자 및 커플의 과거 활동, 선호도를 분석하여 맞춤형 여행지, 숙소, 활동을 추천.",
        "en": "Machine learning model analyzes individual user and couple's past activities and preferences to recommend customized destinations, accommodations, and activities.",
        "ja": "機械学習モデルが個別ユーザーおよびカップルの過去の活動、好みを分析し、カスタマイズされた旅行先、宿泊施設、アクティビティを推奨。"
      }
      "implemented": true
    },
    {
      "title": {
        "ko": "커플 취향 절충 알고리즘",
        "en": "Couple Preference Compromise Algorithm",
        "ja": "カップルの好み妥協アルゴリズム"
      }
      "description": {
        "ko": "두 사용자의 상반된 취향(예: 활동 vs 휴식)을 입력받아, 만족도를 최대화하는 절충안을 계산하여 여행 계획에 반영.",
        "en": "Receives input on two users' conflicting preferences (e.g., activity vs. relaxation) and calculates a compromise that maximizes satisfaction, reflecting it in the travel plan.",
        "ja": "二人のユーザーの相反する好み（例：活動 vs 休息）を入力として受け取り、満足度を最大化する妥協案を計算し、旅行計画に反映。"
      }
      "implemented": true
    },
    {
      "title": {
        "ko": "실시간 협업 일정 관리",
        "en": "Real-time Collaborative Itinerary Management",
        "ja": "リアルタイム協力スケジュール管理"
      }
      "description": {
        "ko": "두 사용자가 동시에 여행 일정을 편집하고, 변경 사항이 즉시 반영되는 실시간 동기화 기능 제공 (Socket.io 활용).",
        "en": "Allows two users to simultaneously edit the travel itinerary, providing real-time synchronization where changes are instantly reflected (using Socket.io).",
        "ja": "二人のユーザーが同時に旅行日程を編集し、変更が即座に反映されるリアルタイム同期機能を提供（Socket.io活用）。"
      }
      "implemented": true
    },
    {
      "title": {
        "ko": "소셜 기능 및 추억 공유",
        "en": "Social Features and Memory Sharing",
        "ja": "ソーシャル機能と思い出共有"
      }
      "description": {
        "ko": "여행 후기 작성, 사진 공유, 다른 커플의 추천 경로 탐색 등 소셜 기능 제공.",
        "en": "Provides social features such as writing travel reviews, sharing photos, and exploring recommended routes from other couples.",
        "ja": "旅行レビューの作成、写真共有、他のカップルの推奨ルートの探索など、ソーシャル機能を提供。"
      }
      "implemented": true
    }
  ],
  "preview_screenshots": {
    "screenshots": [
      "/assets/loventure/shot-1.png",
      "/assets/loventure/shot-2.png",
      "/assets/loventure/shot-3.png"
    ],
    "description": {
      "ko": "여행 계획 편집기, AI 추천 화면, 소셜 공유 화면 프리뷰",
      "en": "Travel Plan Editor, AI Recommendation Screen, Social Sharing Screen Preview",
      "ja": "旅行計画エディタ、AI推奨画面、ソーシャル共有画面のプレビュー"
    }
  },
  "stackAndArchitecture": {
    "techStack": {
      "frontend": "React, TypeScript",
      "backend": "Node.js, Express",
      "ai_ml": "Python, TensorFlow",
      "devops": "Docker, AWS"
    },
    "data": {
      "ko": "MongoDB, Redis",
      "en": "MongoDB, Redis",
      "ja": "MongoDB, Redis"
    },
    "deployment": {
      "ko": "AWS EC2, Docker Containers",
      "en": "AWS EC2, Docker Containers",
      "ja": "AWS EC2, Docker Containers"
    },
    "architecture": {
      "frontend": {
        "ko": "React 기반 SPA, TypeScript로 타입 안전성 확보",
        "en": "React-based SPA with TypeScript for type safety",
        "ja": "ReactベースのSPA、TypeScriptによる型安全性確保"
      }
      "backend": {
        "ko": "Node.js + Express RESTful API, MongoDB 데이터베이스",
        "en": "Node.js + Express RESTful API, MongoDB database",
        "ja": "Node.js + Express RESTful API、MongoDBデータベース"
      }
      "dataFlow": {
        "ko": "사용자 입력 → 백엔드 처리 → 데이터베이스 저장 → 프론트엔드 표시",
        "en": "User Input → Backend Processing → Database Storage → Frontend Display",
        "ja": "ユーザー入力 → バックエンド処理 → データベース保存 → フロントエンド表示"
      }
      "security": {
        "ko": "JWT 인증, 데이터 암호화",
        "en": "JWT authentication, data encryption",
        "ja": "JWT認証、データ暗号化"
      }
