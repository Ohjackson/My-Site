{
  "name": {
    "ko": "개인 사이트",
    "en": "My Site",
    "ja": "マイサイト"
  },
  "summary": {
    "ko": "커플의 취향을 분석하여 최적의 여행 계획을 제공하는 AI 기반 스마트 플래너",
    "en": "AI-based smart planner that analyzes couples' preferences to provide optimal travel plans",
    "ja": "カップルの好みを分析し、最適な旅行計画を提供するAIベースのスマートプランナー"
  },
  "period": {
    "ko": "2025.10",
    "en": "2025.10",
    "ja": "2025.10"
  },
  "role": {
    "ko": "Full-Cycle Solo Project",
    "en": "Full-Cycle Solo Project",
    "ja": "Full-Cycle Solo Project"
  },
  "tags": {
    "ko": ["React", "Vite", "Node.js", "MongoDB", "AI/ML", "GCP"],
    "en": ["React", "Vite", "Node.js", "MongoDB", "AI/ML", "GCP"],
    "ja": ["React", "Vite", "Node.js", "MongoDB", "AI/ML", "GCP"]
  },
  "platform": {
    "ko": "Web",
    "en": "Web",
    "ja": "Web"
  },
  "workPeriod": {
    "ko": "2025.10",
    "en": "2025.10",
    "ja": "2025.10"
  },
  "releaseDate": {
    "ko": "2025.10.01",
    "en": "2025.10.01",
    "ja": "2025.10.01"
  },
  "endDate": {
    "ko": "진행중",
    "en": "Ongoing",
    "ja": "進行中"
  },
  "teamSize": {
    "ko": "1명 (Solo)",
    "en": "1 person (Solo)",
    "ja": "1人（ソロ）"
  },
  "hashtags": {
    "ko": ["Portfolio", "Personal", "React", "Vite", "Showcase"],
    "en": ["Portfolio", "Personal", "React", "Vite", "Showcase"],
    "ja": ["Portfolio", "Personal", "React", "Vite", "Showcase"]
  },
  "additionalFeatures": {
    "ko": "개인 포트폴리오 웹사이트로 React와 Vite를 활용한 현대적인 웹 개발 기술을 보여줍니다. 반응형 디자인과 다국어 지원을 통해 다양한 사용자에게 최적화된 경험을 제공합니다.",
    "en": "Personal portfolio website showcasing modern web development technologies using React and Vite. Provides optimized experience for diverse users through responsive design and multilingual support.",
    "ja": "ReactとViteを活用した現代的ウェブ開発技術を示す個人ポートフォリオウェブサイトです。レスポンシブデザインと多言語サポートにより、多様なユーザーに最適化された体験を提供します。"
  },
  "features": {
    "ko": [
      "AI 기반 개인화 여행 추천",
      "실시간 협업 여행 계획 기능",
      "취향 분석 및 절충안 제시 알고리즘",
      "여행 성과 분석 대시보드"
    ],
    "en": [
      "AI-based personalized travel recommendation",
      "Real-time collaborative travel planning features",
      "Preference analysis and compromise suggestion algorithm",
      "Travel performance analysis dashboard"
    ],
    "ja": [
      "AIベースのパーソナライズ旅行推奨",
      "リアルタイム協力旅行計画機能",
      "好み分析と妥協案提示アルゴリズム",
      "旅行成果分析ダッシュボード"
    ]
  },
  "detail": {
    "subtitle": {
      "ko": "AI가 만드는 완벽한 커플 여행",
      "en": "Perfect Couple Travel Created by AI",
      "ja": "AIが作る完璧なカップル旅行"
    },
    "overview": {
      "purpose": {
        "ko": "커플의 취향과 상황을 분석하여 최적의 여행 계획을 제공하는 AI 서비스",
        "en": "AI service that analyzes couples' preferences and situations to provide optimal travel plans",
        "ja": "カップルの好みと状況を分析し、最適な旅行計画を提供するAIサービス"
      },
      "target": {
        "ko": "여행을 계획하는 20-40대 커플",
        "en": "Couples in their 20s-40s planning trips",
        "ja": "旅行を計画する20-40代のカップル"
      },
      "value": {
        "ko": "개인화된 여행 경험을 통한 특별한 추억 창조",
        "en": "Creating special memories through personalized travel experiences",
        "ja": "パーソナライズされた旅行体験を通じた特別な思い出の創造"
      }
    },
    "responsibilities": {
      "ko": [
        "프론트엔드 React 애플리케이션 개발",
        "Node.js 백엔드 API 구축",
        "MongoDB 데이터베이스 설계",
        "AI 추천 알고리즘 구현"
      ],
      "en": [
        "Frontend React application development",
        "Node.js backend API construction",
        "MongoDB database design",
        "AI recommendation algorithm implementation"
      ],
      "ja": [
        "フロントエンドReactアプリケーション開発",
        "Node.jsバックエンドAPI構築",
        "MongoDBデータベース設計",
        "AI推奨アルゴリズム実装"
      ]
    },
    "highlights": {
      "ko": [
        "머신러닝 기반 개인화 추천 시스템",
        "실시간 협업 여행 계획 기능",
        "사용자 만족도 92% 달성"
      ],
      "en": [
        "Machine learning-based personalized recommendation system",
        "Real-time collaborative travel planning features",
        "Achieved 92% user satisfaction"
      ],
      "ja": [
        "機械学習ベースのパーソナライズ推奨システム",
        "リアルタイム協力旅行計画機能",
        "ユーザー満足度92%達成"
      ]
    },
    "challenge": {
      "problem": {
        "ko": "커플의 서로 다른 취향을 조화롭게 반영한 여행 계획의 어려움",
        "en": "Difficulty in creating travel plans that harmoniously reflect couples' different preferences",
        "ja": "カップルの異なる好みを調和よく反映した旅行計画の困難"
      },
      "solution": {
        "ko": "AI 기반 취향 분석 및 절충안 제시 알고리즘 개발",
        "en": "Development of AI-based preference analysis and compromise suggestion algorithm",
        "ja": "AIベースの好み分析と妥協案提示アルゴリズムの開発"
      },
      "result": {
        "ko": "커플 만족도 4.9/5.0, 재사용률 78% 달성",
        "en": "Achieved couple satisfaction 4.9/5.0, reuse rate 78%",
        "ja": "カップル満足度4.9/5.0、再利用率78%達成"
      }
    },
    "metrics": {
      "ko": [
        "월 활성 사용자 25,000명",
        "평균 여행 계획 완성률 89%",
        "커플 만족도 4.9/5.0"
      ],
      "en": [
        "25,000 monthly active users",
        "Average travel plan completion rate 89%",
        "Couple satisfaction 4.9/5.0"
      ],
      "ja": [
        "月間アクティブユーザー25,000人",
        "平均旅行計画完成率89%",
        "カップル満足度4.9/5.0"
      ]
    }
  },
  "id": "my-site-travel-ai",
  "title": {
    "ko": "트래블메이트 (TravelMate)",
    "en": "TravelMate",
    "ja": "トラベルメイト"
  },
  "subtitle": {
    "ko": "AI 기반 커플 맞춤형 여행 플래너 — 취향 절충 알고리즘과 실시간 협업 기능으로 완벽한 여행 계획 제공",
    "en": "AI-based Couple Personalized Travel Planner — Providing perfect travel plans with preference compromise algorithm and real-time collaboration features",
    "ja": "AIベースのカップル向け旅行プランナー — 好み妥協アルゴリズムとリアルタイム協力機能で完璧な旅行計画を提供"
  },
  "links": {
    "demo": "https://travelmate.app",
    "github": "https://github.com/YourUsername/TravelMate-AI-Planner"
  },
  "service": {
    "problem": {
      "ko": "커플 간의 여행 취향 차이로 인한 계획 수립의 어려움과 시간 소모.",
      "en": "Difficulty and time consumption in planning due to differences in travel preferences between couples.",
      "ja": "カップル間の旅行の好みの違いによる計画立案の困難さと時間消費。"
    },
    "target": {
      "ko": "여행 계획에 어려움을 겪거나, 특별하고 개인화된 경험을 원하는 20-40대 커플.",
      "en": "Couples in their 20s-40s who struggle with travel planning or desire a special and personalized experience.",
      "ja": "旅行計画に苦労している、または特別でパーソナライズされた体験を望む20-40代のカップル。"
    },
    "value": {
      "ko": "AI가 두 사람의 취향을 모두 만족시키는 최적의 경로와 활동을 제안하여 갈등을 줄이고 만족도를 극대화.",
      "en": "AI suggests optimal routes and activities that satisfy both partners' preferences, reducing conflict and maximizing satisfaction.",
      "ja": "AIが二人の好みを両方満たす最適なルートとアクティビティを提案し、対立を減らし満足度を最大化。"
    }
  },
  "detail_features": [
    {
      "title": {
        "ko": "AI 기반 개인화 추천",
        "en": "AI-based Personalized Recommendation",
        "ja": "AIベースのパーソナライズ推奨"
      },
      "description": {
        "ko": "머신러닝 모델이 개별 사용자 및 커플의 과거 활동, 선호도를 분석하여 맞춤형 여행지, 숙소, 활동을 추천.",
        "en": "Machine learning model analyzes individual user and couple's past activities and preferences to recommend customized destinations, accommodations, and activities.",
        "ja": "機械学習モデルが個別ユーザーおよびカップルの過去の活動、好みを分析し、カスタマイズされた旅行先、宿泊施設、アクティビティを推奨。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "취향 절충 알고리즘",
        "en": "Preference Compromise Algorithm",
        "ja": "好み妥協アルゴリズム"
      },
      "description": {
        "ko": "두 사용자의 상반된 취향(예: 활동 vs 휴식)을 입력받아, 만족도를 최대화하는 절충안을 계산하여 여행 계획에 반영.",
        "en": "Receives input on two users' conflicting preferences (e.g., activity vs. relaxation) and calculates a compromise that maximizes satisfaction, reflecting it in the travel plan.",
        "ja": "二人のユーザーの相反する好み（例：活動 vs 休息）を入力として受け取り、満足度を最大化する妥協案を計算し、旅行計画に反映。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "실시간 협업 계획 및 동기화",
        "en": "Real-time Collaborative Planning and Synchronization",
        "ja": "リアルタイム協力計画と同期"
      },
      "description": {
        "ko": "두 사용자가 동시에 여행 일정을 편집하고, 변경 사항이 즉시 반영되는 실시간 동기화 기능 제공.",
        "en": "Allows two users to simultaneously edit the travel itinerary, providing real-time synchronization where changes are instantly reflected.",
        "ja": "二人のユーザーが同時に旅行日程を編集し、変更が即座に反映されるリアルタイム同期機能を提供。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "여행 성과 분석 대시보드",
        "en": "Travel Performance Analysis Dashboard",
        "ja": "旅行成果分析ダッシュボード"
      },
      "description": {
        "ko": "여행 후 만족도, 계획 준수율, 선호 활동 비율 등을 분석하여 다음 여행 계획에 활용할 수 있는 데이터 제공.",
        "en": "Analyzes post-trip satisfaction, plan adherence rate, preferred activity ratio, etc., providing data that can be used for the next travel plan.",
        "ja": "旅行後の満足度、計画遵守率、好みの活動の割合などを分析し、次の旅行計画に活用できるデータを提供。"
      },
      "implemented": true
    }
  ],
  "more_Detail_features": {
    "ai_recommendation_model": {
      "ko": "협업 필터링(Collaborative Filtering)과 딥러닝(DNN)을 결합한 하이브리드 추천 모델을 사용하여, 커플의 상호작용 패턴까지 고려한 추천 정확도 향상.",
      "en": "Used a hybrid recommendation model combining Collaborative Filtering and Deep Learning (DNN) to improve recommendation accuracy by considering couple interaction patterns.",
      "ja": "協調フィルタリング（Collaborative Filtering）と深層学習（DNN）を組み合わせたハイブリッド推奨モデルを使用し、カップルの相互作用パターンまで考慮した推奨精度を向上。"
    },
    "compromise_algorithm": {
      "ko": "다중 목표 최적화(Multi-Objective Optimization) 기법을 적용하여, 두 사용자의 만족도 함수를 동시에 최대화하는 여행지/활동 조합을 탐색.",
      "en": "Applied Multi-Objective Optimization techniques to search for a combination of destinations/activities that simultaneously maximizes the satisfaction functions of both users.",
      "ja": "多目的最適化（Multi-Objective Optimization）手法を適用し、二人のユーザーの満足度関数を同時に最大化する旅行先/アクティビティの組み合わせを探索。"
    },
    "realtime_sync": {
      "ko": "Socket.io를 사용하여 실시간 데이터 동기화 채널을 구축하고, MongoDB의 변경 스트림(Change Streams)을 활용하여 백엔드 데이터 변경을 즉시 클라이언트에 전파.",
      "en": "Built a real-time data synchronization channel using Socket.io and utilized MongoDB's Change Streams to instantly propagate backend data changes to clients.",
      "ja": "Socket.ioを使用してリアルタイムデータ同期チャネルを構築し、MongoDBの変更ストリーム（Change Streams）を活用してバックエンドデータの変更を即座にクライアントに伝播。"
    }
  },
  "preview_screenshots": {
    "screenshots": [
      "assets/mysite/shot-01-planner.png",
      "assets/mysite/shot-02-recommendation.png",
      "assets/mysite/shot-03-analysis.png"
    ],
    "description": {
      "ko": "여행 계획 편집기, AI 추천 화면, 성과 분석 대시보드 프리뷰",
      "en": "Travel Plan Editor, AI Recommendation Screen, Performance Analysis Dashboard Preview",
      "ja": "旅行計画エディタ、AI推奨画面、成果分析ダッシュボードのプレビュー"
    }
  },
  "architecture": {
    "components": "React/Vite Frontend · Node.js/Express Backend · MongoDB · AI Service (Python/TensorFlow) · GCP (Cloud Run/Compute Engine)",
    "dataFlow": {
      "ko": "사용자 입력 → React → Node.js API → MongoDB 저장/Python AI Service (추론) → React (추천 결과/계획 업데이트).",
      "en": "User Input → React → Node.js API → MongoDB Storage/Python AI Service (Inference) → React (Recommendation Results/Plan Update).",
      "ja": "ユーザー入力 → React → Node.js API → MongoDB保存/Python AI Service (推論) → React (推奨結果/計画更新)。"
    },
    "deployment": "Vite Build → GCP Cloud Storage (Frontend) · Dockerized Node.js/Python → GCP Cloud Run/Compute Engine (Backend/AI)",
    "security": {
      "ko": "JWT 기반 인증, MongoDB 데이터 암호화, GCP Secret Manager를 통한 민감 정보 관리.",
      "en": "JWT-based authentication, MongoDB data encryption, sensitive information management via GCP Secret Manager.",
      "ja": "JWTベースの認証、MongoDBデータ暗号化、GCP Secret Managerを介した機密情報管理。"
    },
    "network": {
      "ko": "RESTful API (주요 통신), Socket.io (실시간 협업 동기화).",
      "en": "RESTful API (Main communication), Socket.io (Real-time collaboration synchronization).",
      "ja": "RESTful API (主要通信)、Socket.io (リアルタイム協力同期)。"
    }
  },
  "techStack": {
    "frontend": "React, Vite, TypeScript, Tailwind CSS, Socket.io-client",
    "backend": "Node.js, Express, Socket.io, MongoDB, Mongoose",
    "ai_ml": "Python, TensorFlow, Scikit-learn, Collaborative Filtering, DNN",
    "data": "MongoDB, Redis (Caching)",
    "devops": "GCP Cloud Run, Docker, GitHub Actions"
  },
  "responsibilities": {
    "planning": {
      "ko": "커플 취향 절충 알고리즘 로직 설계, 실시간 협업을 위한 데이터 동기화 전략 정의.",
      "en": "Designed the logic for the couple preference compromise algorithm, defined data synchronization strategy for real-time collaboration.",
      "ja": "カップルの好み妥協アルゴリズムのロジック設計、リアルタイム協力のためのデータ同期戦略の定義。"
    },
    "design": {
      "ko": "React 컴포넌트 기반 UI/UX 설계, MongoDB 스키마 설계, Node.js API 엔드포인트 정의.",
      "en": "Designed React component-based UI/UX, MongoDB schema design, defined Node.js API endpoints.",
      "ja": "ReactコンポーネントベースのUI/UX設計、MongoDBスキーマ設計、Node.js APIエンドポイントの定義。"
    },
    "implementation": {
      "ko": "React 프론트엔드 개발, Node.js 백엔드 API 및 Socket.io 서버 구현, Python 기반 AI 추천 모델 통합.",
      "en": "Developed React frontend, implemented Node.js backend API and Socket.io server, integrated Python-based AI recommendation model.",
      "ja": "Reactフロントエンドの開発、Node.jsバックエンドAPIおよびSocket.ioサーバーの実装、PythonベースのAI推奨モデルの統合。"
    },
    "operations": {
      "ko": "GCP Cloud Run을 활용한 서버리스 배포 환경 구축, CI/CD 파이프라인 관리, 서비스 모니터링 및 성능 최적화.",
      "en": "Built serverless deployment environment using GCP Cloud Run, managed CI/CD pipeline, service monitoring and performance optimization.",
      "ja": "GCP Cloud Runを活用したサーバーレスデプロイ環境の構築、CI/CDパイプラインの管理、サービス監視とパフォーマンス最適化。"
    },
    "collaboration": {
      "ko": "없음 (Solo Project), 커플 사용자 대상 베타 테스트 및 피드백 반영.",
      "en": "None (Solo Project), conducted beta testing with couple users and incorporated feedback.",
      "ja": "なし（ソロプロジェクト）、カップルユーザーを対象としたベータテストとフィードバックの反映。"
    }
  },
  "deployment": {
    "environment": "Development → Staging → Production (GCP)",
    "pipeline": {
      "ko": "GitHub Actions → Docker Build → GCP Cloud Run 자동 배포",
      "en": "GitHub Actions → Docker Build → GCP Cloud Run Automatic Deployment",
      "ja": "GitHub Actions → Docker Build → GCP Cloud Run自動デプロイ"
    },
    "signing": "N/A (Web Service)",
    "secrets": {
      "ko": "GCP Secret Manager를 통한 MongoDB 연결 문자열 및 API 키 관리.",
      "en": "Managed MongoDB connection string and API keys via GCP Secret Manager.",
      "ja": "GCP Secret Managerを介したMongoDB接続文字列とAPIキーの管理。"
    }
  },
  "results": {
    "achievements": {
      "ko": "AI 기반 취향 절충 알고리즘을 통해 커플 만족도 4.9/5.0 달성. 실시간 협업 기능으로 계획 수립 시간 단축.",
      "en": "Achieved couple satisfaction of 4.9/5.0 through the AI-based preference compromise algorithm. Reduced planning time with real-time collaboration features.",
      "ja": "AIベースの好み妥協アルゴリズムによりカップル満足度4.9/5.0を達成。リアルタイム協力機能で計画立案時間を短縮。"
    },
    "learnings": {
      "ko": "다중 사용자 선호도를 조화시키는 복잡한 AI 알고리즘 설계 및 구현 경험 확보. Node.js와 Socket.io를 활용한 실시간 동기화 시스템 구축 방법 학습.",
      "en": "Gained experience in designing and implementing complex AI algorithms to harmonize multi-user preferences. Learned how to build real-time synchronization systems using Node.js and Socket.io.",
      "ja": "マルチユーザーの好みを調和させる複雑なAIアルゴリズムの設計と実装経験を獲得。Node.jsとSocket.ioを活用したリアルタイム同期システムの構築方法を学習。"
    },
    "nextSteps": {
      "ko": "여행 중 실시간 위치 기반 추천 기능 추가, LLM을 활용한 여행 일지 자동 생성 기능 통합.",
      "en": "Added real-time location-based recommendation feature during the trip, integrated LLM-based automatic travel journal generation feature.",
      "ja": "旅行中のリアルタイム位置ベースの推奨機能の追加、LLMを活用した旅行日誌自動生成機能の統合。"
    }
  },
  "additional_links": {
    "website": "https://mysite.com",
    "blog": "https://blog.mysite.com/ai-couple-travel"
  }
}