{
  "name": {
    "ko": "다온",
    "en": "Daon",
    "ja": "ダオン"
  },
  "summary": {
    "ko": "자기공상법을 이용한 우울증 조기 발견 전문 ai 채팅앱",
    "en": "An AI chat app for early depression risk spotting using a guided self-imagery method.",
    "ja": "自己空想法を用いてうつ病リスクの早期発見を目指すAIチャットアプリ。"
  },
  "role": {
    "ko": "full-stack, co-founder",
    "en": "Full-stack, Co-founder",
    "ja": "フルスタック、共同創業者"
  },
  "tags": {
    "ko": ["iOS", "Fastapi", "Chat Bot"],
    "en": ["iOS", "FastAPI", "Chatbot", "LLM", "Privacy"],
    "ja": ["iOS", "FastAPI", "チャットボット", "LLM", "プライバシー"]
  },
  "platform": {
    "ko": "iPhone",
    "en": "iPhone",
    "ja": "iPhone"
  },
  "workPeriod": {
    "ko": "2025.01",
    "en": "2025.01",
    "ja": "2025.01"
  },
  "releaseDate": {
    "ko": "2025.01",
    "en": "2025.01",
    "ja": "2025.01"
  },
  "endDate": {
    "ko": "서버 종료",
    "en": "Service retired",
    "ja": "サーバー終了"
  },
  "teamSize": {
    "ko": "4",
    "en": "4",
    "ja": "4"
  },
  "features": {
    "ko": [
      "성격이 다 다른 현실형 쳇봇과 대화"
    ],
    "en": [
      "Converse with multiple realistic personas",
      "Early risk cues via guided self-imagery prompts",
      "Session journaling & mood tagging",
      "On-device privacy options and minimal data capture"
    ],
    "ja": [
      "複数のリアル系ペルソナと対話",
      "自己空想法プロンプトによる早期リスクの手がかり",
      "セッション記録と気分タグ付け",
      "端末内優先のプライバシーと最小限のデータ取得"
    ]
  },
  "links": {
    "appStore": "https://apps.apple.com/kr/app/daon-ai-%EC%B1%84%ED%8C%85%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%82%98%EB%8A%94-%EB%98%90-%EB%8B%A4%EB%A5%B8-%EB%82%98/id6741571279",
    "github": "https://github.com/YourUsername/Daon-Energy"
  },
  "additionalFeatures": {
    "ko": "iOS 클라이언트와 FastAPI 백엔드로 구성. 온보딩→대화→회고 루프, 최소 수집·익명화 원칙, 홈서버 운영(팀 배포).",
    "en": "Built with an iOS client and FastAPI backend. Onboarding→dialogue→reflection loop, data-minimization/anonymization, and team-run home-server ops.",
    "ja": "iOSクライアントとFastAPIバックエンド構成。オンボーディング→対話→振り返りのループ、最小収集・匿名化方針、ホームサーバー運用（チーム配備）。"
  },
  "overviewStory": {
    "ko": "일상의 대화를 통해 스스로 감정을 언어화·정리하도록 돕고, 자기공상법 기반 질문으로 우울 신호를 조기에 포착하려고 시작함. 의료행위가 아닌 자기 인식 지원 도구로 설계함.",
    "en": "Started to help users verbalize and organize emotions in everyday chat, surfacing early depression signals with guided self-imagery questions. Designed as a self-awareness aid—not a medical device.",
    "ja": "日常会話で感情の言語化・整理を支援し、自己空想法に基づく問いでうつの兆しを早期に気づけるように開始。医療行為ではなく自己認識支援ツールとして設計。"
  },
  "service": {
    "problem": {
      "ko": "전문 상담 전 단계에서 감정 기록·점검이 어렵고, 도움을 청할 타이밍을 놓치기 쉬움.",
      "en": "Before professional care, tracking feelings and knowing when to seek help is hard and easy to miss.",
      "ja": "専門支援の前段階で感情記録・点検が難しく、支援を求めるタイミングを逃しやすい。"
    },
    "target": {
      "ko": "비의료적 자기 점검 도구를 원하는 성인 사용자.",
      "en": "Adults who want a non-clinical self-check tool.",
      "ja": "非医療的なセルフチェックツールを求める成人ユーザー。"
    },
    "value": {
      "ko": "현실형 페르소나와의 대화, 자기공상법 질문, 회고 저널링으로 자가 인식을 높이고 조기 신호를 놓치지 않게 함.",
      "en": "Realistic personas, guided self-imagery prompts, and reflection journaling raise self-awareness and help catch early signals.",
      "ja": "リアル系ペルソナ、自己空想法の問い、振り返りジャーナルで自己認識を高め、初期の兆候を見逃しにくくする。"
    }
  },
  "detail_features": [
    {
      "title": {
        "ko": "멀티 페르소나 대화",
        "en": "Multi-persona Dialogue",
        "ja": "マルチペルソナ対話"
      },
      "description": {
        "ko": "성향이 다른 페르소나(현실형 톤)와 상황 맞춤 질문·피드백 제공.",
        "en": "Realistic-tone personas provide situation-aware questions and feedback.",
        "ja": "性格の異なるペルソナが状況に合わせた質問とフィードバックを提供。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "자기공상법 가이드 프롬프트",
        "en": "Guided Self-Imagery Prompts",
        "ja": "自己空想法ガイドプロンプト"
      },
      "description": {
        "ko": "심상·상황 재구성을 유도하는 단계형 질문으로 자기 인식과 정서 명료화 지원.",
        "en": "Stepwise prompts that elicit imagery and reframe situations to clarify emotions and self-awareness.",
        "ja": "イメージ想起と状況の再構成を促す段階的な問いで自己認識と情動の明確化を支援。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "세션 저널·기분 태깅",
        "en": "Session Journal & Mood Tags",
        "ja": "セッション記録・気分タグ"
      },
      "description": {
        "ko": "대화 종료 시 요약·메모·감정 태그 저장, 추세 확인.",
        "en": "Save summaries, notes, and mood tags at end of chat; review trends later.",
        "ja": "会話終了時に要約・メモ・感情タグを保存し、後で傾向を確認。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "프라이버시·데이터 최소 수집",
        "en": "Privacy & Data Minimization",
        "ja": "プライバシーと最小収集"
      },
      "description": {
        "ko": "옵트인 기반 익명 ID·필요 최소 데이터만 저장. 외부 호출은 사용자 키 사용 시에만.",
        "en": "Opt-in anonymous ID and minimal required data only; external calls only with user-provided keys.",
        "ja": "オプトインの匿名IDと必要最小限のデータのみ保存。外部呼び出しはユーザー提供キー時のみ。"
      },
      "implemented": true
    }
  ],
  "preview_screenshots": {
    "screenshots": [
      "/assets/daon/shot-1.png",
      "/assets/daon/shot-2.png",
      "/assets/daon/shot-3.png",
      "/assets/daon/shot-4.png",
      "/assets/daon/shot-5.png"
    ],
    "description": {
      "ko": "iOS 앱 프리뷰(온보딩/대화/회고)",
      "en": "iOS app preview (onboarding/dialogue/reflection)",
      "ja": "iOSアプリのプレビュー（オンボーディング／対話／振り返り）"
    }
  },
  "techStack": {
    "frontend": "iOS (SwiftUI, UIKit, Combine)",
    "backend": "Python (FastAPI), PostgreSQL/SQLite, Nginx",
    "ai_ml": "LLM API orchestration, Prompt templates, Safety filters",
    "data": "PostgreSQL/SQLite, (Opt) Redis cache",
    "devops": "Docker, GitHub Actions, Home-server (team-operated)"
  },
  "architecture": {
    "components": "iOS App · FastAPI · DB(PostgreSQL/SQLite) · (Opt) Redis · Nginx",
    "dataFlow": {
      "ko": "iOS 클라이언트 → FastAPI(대화/요약) → DB 저장 → 통계/회고 뷰 응답",
      "en": "iOS client → FastAPI (dialogue/summary) → DB storage → stats/reflection views",
      "ja": "iOSクライアント → FastAPI（対話/要約） → DB保存 → 統計/振り返りビュー"
    },
    "deployment": "Dockerized FastAPI on home server (reverse-proxied by Nginx) · iOS via TestFlight/App Store",
    "security": {
      "ko": "JWT, 익명화 ID, 전송 구간 TLS, PII 최소화",
      "en": "JWT, anonymized IDs, TLS in transit, PII minimization",
      "ja": "JWT、匿名化ID、通信のTLS、PII最小化"
    },
    "network": {
      "ko": "HTTPS REST API, (옵션) 스트리밍 응답",
      "en": "HTTPS REST API, optional streaming responses",
      "ja": "HTTPS REST API、ストリーミング応答（任意）"
    }
  },
  "responsibilities": {
    "ko": [
      "iOS 클라이언트(UI/상태)와 FastAPI 백엔드 핵심 엔드포인트 구현",
      "대화/요약 스키마·API 스펙 정의, 비동기 처리·에러 정책 수립",
      "프라이버시 정책 반영(데이터 최소 수집·익명화)",
      "배포 핸드오버 문서화(홈서버 팀 배포)"
    ],
    "en": [
      "Implemented iOS client (UI/state) and core FastAPI endpoints",
      "Defined dialogue/summary schema & API specs; set async handling and error policies",
      "Applied privacy policy (data minimization/anonymization)",
      "Documented deployment handover for team-run home server"
    ],
    "ja": [
      "iOSクライアント（UI/状態）とFastAPIの主要エンドポイントを実装",
      "対話/要約スキーマとAPI仕様を定義、非同期処理とエラーポリシーを策定",
      "プライバシーポリシー適用（最小収集・匿名化）",
      "ホームサーバーのチーム運用に向けたデプロイ引き継ぎを文書化"
    ]
  },
  "lessonsLearned": {
    "ko": "클라이언트–백엔드 계약(스키마) 고정이 제품 속도를 좌우함. 프롬프트 설계와 안전 필터가 품질·책임에 직결됨.",
    "en": "Locking client–backend contracts (schemas) dictates velocity. Prompt design and safety filters directly affect quality and responsibility.",
    "ja": "クライアントとバックエンドの契約（スキーマ）を固定することが速度を左右。プロンプト設計と安全フィルタが品質と責任に直結。"
  },
  "metrics": {
    "ko": [
      "알파 사용자 피드백: 대화 종료 후 회고 작성률 상승",
      "크래시-프리 세션 비율 개선"
    ],
    "en": [
      "Alpha feedback: higher reflection-note completion after sessions",
      "Improved crash-free sessions ratio"
    ],
    "ja": [
      "アルファ段階のフィードバック：セッション後の振り返り記入率が向上",
      "クラッシュフリーセッション率の改善"
    ]
  },
  "deployment": {
    "environment": "Development → Staging → Production (home-server)",
    "pipeline": {
      "ko": "GitHub Actions → Docker Build → 홈서버 배포(Nginx 리버스 프록시, 수동 롤아웃)",
      "en": "GitHub Actions → Docker build → Home-server deploy (Nginx reverse proxy, manual rollout)",
      "ja": "GitHub Actions → Dockerビルド → ホームサーバー配備（Nginxリバースプロキシ、手動ロールアウト）"
    },
    "signing": "Apple Developer Program",
    "secrets": {
      "ko": ".env 분리, Keychain(iOS), 서버 환경변수로 민감값 관리",
      "en": "Split .env, Keychain (iOS), and server env vars for sensitive keys",
      "ja": "環境変数を分離し、iOSはKeychain、サーバーは環境変数で機微情報を管理"
    }
  },
  "results": {
    "achievements": {
      "ko": "iOS–FastAPI 기반 대화/회고 루프 MVP 출시, App Store 등록 및 홈서버 운영",
      "en": "Shipped an iOS–FastAPI MVP for the dialogue/reflection loop; listed on the App Store and operated on a home server",
      "ja": "iOS–FastAPIによる対話/振り返りループMVPをリリース、App Store掲載とホームサーバー運用を実施"
    },
    "learnings": {
      "ko": "의료 대체가 아님을 명확히 안내하는 UX·문구가 신뢰 형성에 필수임.",
      "en": "Clear UX copy that it is not a clinical tool is essential for user trust.",
      "ja": "医療目的ではないことを明確に示すUXと文言が信頼形成に不可欠。"
    },
    "nextSteps": {
      "ko": "서버 종료 이후 오프라인 우선 모델로 재구성 검토(온디바이스 요약·태깅)",
      "en": "Post-retirement exploration of an offline-first model (on-device summarization/tagging)",
      "ja": "サーバー終了後はオフライン優先モデル（端末内要約・タグ付け）の再構成を検討"
    }
  },
  "additional_links": {
    "website": "https://apps.apple.com/kr/app/daon-ai-%EC%B1%84%ED%8C%85%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%82%98%EB%8A%94-%EB%98%90-%EB%8B%A4%EB%A5%B8-%EB%82%98/id6741571279",
    "blog": "https://github.com/YourUsername/Daon-Energy"
  }
}
