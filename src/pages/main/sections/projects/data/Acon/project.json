{
  "name": {
    "ko": "Acon",
    "en": "Acon",
    "ja": "Acon"
  },
  "summary": {
    "ko": "더 이상 맛집을 찾느라 고민할 필요가 없는 지도 앱",
    "en": "A map app that eliminates the hassle of finding good places to eat with taste-based local recommendations.",
    "ja": "もう飲食店探しに悩まない、嗜好ベースでローカル推薦する地図アプリ。"
  },
  "role": {
    "ko": "iOS Developer",
    "en": "iOS Developer",
    "ja": "iOS開発者"
  },
  "tags": {
    "ko": ["UIKit", "SOPT", "MapKit", "CoreLocation", "Glassmorphism"],
    "en": ["UIKit", "SOPT", "MapKit", "CoreLocation", "Glassmorphism"],
    "ja": ["UIKit", "SOPT", "MapKit", "CoreLocation", "グラスモーフィズム"]
  },
  "platform": {
    "ko": "iOS, Android",
    "en": "iOS, Android",
    "ja": "iOS, Android"
  },
  "workPeriod": {
    "ko": "2025.01",
    "en": "2025.01",
    "ja": "2025.01"
  },
  "releaseDate": {
    "ko": "2025.02",
    "en": "2025.02",
    "ja": "2025.02"
  },
  "serviceStatus": {
    "ko": "운영중",
    "en": "In operation",
    "ja": "運用中"
  },
  "teamSize": {
    "ko": "iOS 파트 3명 / 전체 18명",
    "en": "iOS team: 3 / Total: 18",
    "ja": "iOSチーム3名／全体18名"
  },
  "features": {
    "ko": [
      "취향 기반 맛집 탐색",
      "MapKit 기반 지도·리스트 하이브리드",
      "Glassmorphism 스타일 UI"
    ],
    "en": [
      "Taste-based restaurant discovery",
      "MapKit-based hybrid map/list UI",
      "Glassmorphism-style UI"
    ],
    "ja": [
      "嗜好ベースの飲食店探索",
      "MapKitによる地図＋リストのハイブリッドUI",
      "グラスモーフィズムのスタイルUI"
    ]
  },
  "links": {
    "appStore": "https://apps.apple.com/kr/app/acon-%EA%B2%80%EC%83%89-%EC%97%86%EB%8A%94-%EB%A7%9B%EC%A7%91-%EC%A7%80%EB%8F%84/id6740120473",
    "github": "https://github.com/SOPT-all/35-APPJAM-iOS-ACON"
  },
  "overviewStory": {
    "ko": "처음 진행한 비교적 큰 규모의 팀 프로젝트 경험입니다 ",
    "en": "My first experience working on a relatively large team project.",
    "ja": "初めて取り組んだ、比較的規模の大きいチームプロジェクトの経験。"
  },
  "service": {
    "problem": {
      "ko": "평균 취향 중심 추천과 과도한 후보 비교로 인한 피로감, 결정 지연.",
      "en": "Fatigue and decision delays caused by average-taste recommendations and excessive option comparison.",
      "ja": "平均的な嗜好に偏った推薦と過度な比較による疲労と意思決定の遅れ。"
    },
    "target": {
      "ko": "현재 위치 근처에서 본인 취향에 맞는 카페/음식점을 빠르게 찾고 싶은 사용자.",
      "en": "Users who want to quickly find cafes/restaurants near them that match their tastes.",
      "ja": "現在地付近で自分の嗜好に合うカフェ／飲食店を素早く見つけたいユーザー。"
    },
    "value": {
      "ko": "취향 일치율과 로컬 우선 노출로 탐색 시간을 줄이고 만족도를 높임.",
      "en": "Taste-match scoring and local-first surfacing reduce search time and increase satisfaction.",
      "ja": "嗜好一致率とローカル優先表示で探索時間を短縮し、満足度を高める。"
    }
  },
  "detail_features": [
    {
      "title": {
        "ko": "취향 일치율 산정",
        "en": "Taste Match Scoring",
        "ja": "嗜好一致率スコアリング"
      },
      "description": {
        "ko": "카페/음식점 옵션과 사용자의 태그 교집합 기반 점수화. 동일 점수 시 방문 빈도 또는 난수 고정으로 정렬.",
        "en": "Scores venues by intersecting user tags with place options; ties resolved by visit frequency or seeded randomness.",
        "ja": "店舗オプションとユーザータグの共通集合でスコア化。同点時は訪問頻度または固定乱数で並び替え。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "2/4 추천 리스트",
        "en": "2/4 Recommendation List",
        "ja": "2/4推薦リスト"
      },
      "description": {
        "ko": "첫 화면에 2개 핵심 추천 노출, 새로고침 시 나머지 2~4개를 순환 노출하여 선택 부담 완화.",
        "en": "Shows two key picks first; on refresh, cycles the remaining 2–4 to ease choice overload.",
        "ja": "最初に2件を提示し、リフレッシュ時に残り2～4件を巡回表示して選択負荷を軽減。"
      },
      "implemented": true
    },
    {
      "title": {
        "ko": "MapKit 하이브리드 UI",
        "en": "MapKit Hybrid UI",
        "ja": "MapKitハイブリッドUI"
      },
      "description": {
        "ko": "지도·리스트 전환 없이 핵심 정보 파악이 가능한 카드형 오버레이와 글래스모피즘 적용.",
        "en": "Card overlays with glassmorphism on the map deliver key info without map/list switching.",
        "ja": "地図上のカード（グラスモーフィズム）でリスト切替なしに主要情報を把握可能。"
      },
      "implemented": true
    }
  ],
  "preview_screenshots": {
    "screenshots": [
      "/assets/acon/shot-1.png",
      "/assets/acon/shot-2.png",
      "/assets/acon/shot-3.png",
      "/assets/acon/shot-4.png",
      "/assets/acon/shot-5.png"
    ]
  },
  "stackAndArchitecture": {
    "techStack": {
      "frontend": "UIKit, Combine",
      "database": "UserDefaults",
      "devops": "TestFlight, GitHub Actions (CI)"
    }
  },
  "responsibilities": {
    "ko": [
      "- UIKit 온보딩 플로우 구현, \n- alert 모달 구현"
    ],
    "en": [
      "Implemented UIKit onboarding flow",
      "Implemented alert modal"
    ],
    "ja": [
      "UIKitのオンボーディングフローを実装",
      "アラートモーダルを実装"
    ]
  },
  "lessonsLearned": {
  "ko": "- iOS 조직화 팀플 경험: 중앙 enum/모듈로 변경 지점 단일화 → 빠른 반영. 컴포넌트화와 코드리뷰 컨벤션 정착.\n'- 굴러가기만'이 아니라 꼼꼼함의 가치 학습: 한 줄도 이유 있게 작성함.\n- 구현 전 설계 토론의 중요성 체감: 흐름/데이터 계약을 먼저 합의함.\n- 충분히 고민해도 구현 후 드러나는 구조적 문제 경험 → 리팩터링 루프와 실험 플래그로 대응함.",
  "en": "Organized iOS team play: centralized enums/modules as single sources of change → faster updates; established componentization and code-review conventions.\nLearned rigor over \"it just works\": write every line with intent.\nFelt the importance of pre-implementation design discussions: agree on flows/data contracts first.\nEven with planning, structural issues surfaced post-build → addressed via refactoring loops and feature flags.",
  "ja": "iOSの組織的チーム開発：変更点を一元化するenum/モジュールを導入し、コンポーネント化とコードレビュー規約を定着。\n「動けばよい」ではなく緻密さの価値を学習：一行にも意図を持って書く。\n実装前の設計ディスカッションの重要性を実感：フロー／データ契約を先に合意。\n十分に検討しても実装後に構造課題が顕在化 → リファクタリングのループと機能フラグで対応。"
  },
  "results": {
    "achievements": {
      "ko": "MVP 출시",
      "en": "Shipped MVP",
      "ja": "MVPをリリース"
    }
  },
  "additional_links": {
    "website": "https://aconinc.netlify.app"
  }
}
